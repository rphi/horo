# this is an example config file for a group of jobs (app) to be orchestrated by Horo.
# a job config file can contain multiple jobs, as long as they are all valid YAML
# jobs within the app will be able to pull resources from the 'res' folder

- name: "Example job 1"
  description: "This is one of the example jobs"
  id: "pwsh-job-1"
  schedule:
    # use a predefined schedule or define one using cron syntax
    # can apply a job to multiple schedules
    - type: cron
      name: "one-off defined schedule"
      mask: "*/17 * * 10 *"
      comment: "to be fair I don't know what this schedule would actually do"
    - type: default
      name: weekly
      day: mon
    - type: custom
      name: example_app_1:my-custom-schedule
  runner:
    # tasks can be scoped to a particular runner, or group of runners
    - "group:windows"
    - "id:pwsh-win-runner1"
  resources:
    # define resources from 'res' folder, these will be synced to the working
    # directory for the job
    - "$HORO_RES/do-job-1.ps1"
    - "$HORO_RES/job1-inputdata.csv"
  command:
    - "powershell.exe %horo_workdir%\\do-job-1.ps1 -data %horo_workdir%\\job1-inputdata.csv"
  exitcodes:
    # map expected exit codes to helpful messages (optional)
    - code: 0
      type: success
      msg: "Job completed successfully"
    - code: 32
      type: warning
      msg: "Job completed, but some targets were not accessible"
    - code: 80
      type: failure
      msg: "Unable to authenticate to target systems"
  products:
    # any output files to be pulled back to Horo once the job has completed
    - "%horo_workdir%\\out.log"
  failure_action:
    # how should Horo handle a failure of this script
    type: retry
    backoff: 4.5
    max_attempts: 5
    min_interval: 15
  missed_action:
    # what should Horo do if the job is missed
    type: catchup
    max_late: 15min # by how much can it be missed before we don't bother
  notify:
    # options to configure notifications to services like webhooks or syslog servers
    # can use a preconfigured action, or define one here
    - name: "Job failed - notify Teams"
      on: failure
      action: "example_app_1:teams_job_failed"
    - name: "Job failed - email"
      on: [ failure, warning ]
      action:
        method: email
        recipient: noc@horo.app
        subject: "Failed job: $horo_job_id with status $horo_job_status"
        msg: "The job has failed"
        attach_res: True
        include_output: True
        call_to_action:
          title: "View system dashboard"
          url: "https://internal-app:8081/admin/dashboard"
    - name: "Push to company syslog"
      on: all
      action: "company_shared:syslog"

- name: "Example job 2"
  description: "This is a simpler job"
  id: "python-job-2"
  schedule:
    - type: default
      name: daily
  runner:
    - "group:python-linux"
  resources:
    - "$HORO_RES/job2.py"
  command:
    - "python3 $HORO_WORKDIR/job2.py"
  failure_action:
    # disable the job if it fails 5 times consecutively
    type: disable
    after_failures: 5
  missed_action:
    type: ignore
  notify:
    - name: "Failure alert"
      on: failure
      action:
        method: webhook
        url: "https://hookserv/failedjob/?id=$HORO_JOB_ID&code=$HORO_EXIT_CODE"
